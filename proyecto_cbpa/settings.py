"""
Django settings for proyecto_cbpa project.
Generated by 'django-admin startproject' using Django 5.0.7.
"""
import os
from pathlib import Path
import dj_database_url

# Detectar si estamos en producción o desarrollo
ENVIRONMENT = os.getenv('ENVIRONMENT', 'development')  # Por defecto, 'development'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-z_0fz%^3k-qpra%@f0+d@iwyio^5#1bk81$oj0*l%zld7#u4&_')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'cbpa-4myhy.ondigitalocean.app,localhost,127.0.0.1').split(',')

# Application definition
INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'web'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'proyecto_cbpa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'proyecto_cbpa.wsgi.application'

# Database
DATABASE_URL = os.environ.get('DATABASE_URL')
if DATABASE_URL:
    DATABASES = {
        'default': dj_database_url.config(
            default=DATABASE_URL,
            conn_max_age=600,
        )
    }
else:
    # Usar SQLite si no hay DATABASE_URL
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]

# Internationalization
LANGUAGE_CODE = 'es-cl'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

if ENVIRONMENT == 'production':
    STATIC_ROOT = os.getenv('STATIC_ROOT', '/workspace/staticfiles')  # Ruta en producción
    STATICFILES_DIRS = []  # No se usa en producción
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Ruta local
    STATICFILES_DIRS = []  # No necesitas incluir la carpeta 'static' de la app 'web'

# URL para servir archivos estáticos
STATIC_URL = '/static/'

# URL para servir archivos estáticos
STATIC_URL = '/static/'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    "site_title": "Intranet CBPA Admin",  # Título de la pestaña del navegador
    "site_header": "Intranet CBPA",  # Encabezado del administrador
    "site_brand": "CBPA",  # Marca en la barra superior
    "site_logo": "img/logo-cbpa.png",
    "welcome_sign": "Bienvenido al Administrador de CBPA",  # Mensaje de bienvenida
    "copyright": "CBPA © 2025",
    "search_model": "auth.User",  # Modelo para la barra de búsqueda
    "topmenu_links": [
        {"name": "Inicio", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Documentación", "url": "https://docs.djangoproject.com/", "new_window": True},
    ],
    "usermenu_links": 
    [
        {"name": "Soporte", "url": "https://wa.me/56979843069", "new_window": True},
    ],
    # Personalización de colores y diseño
    "theme": "darkly",  # Tema oscuro basado en Bootswatch
    "primary_color": "#FFD700",  # Dorado como color primario
    "secondary_color": "#333333",  # Gris oscuro como color secundario
    "navbar": "navbar-dark bg-dark",  # Barra de navegación oscura
    "sidebar": "sidebar-dark-primary",  # Barra lateral oscura con color primario
    "button_classes": {
        "primary": "btn-warning",  # Botones primarios con estilo dorado
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success",
    },
    # Opciones de navegación
    "show_sidebar": True,  # Mostrar la barra lateral
    "navigation_expanded": True,  # Expandir la navegación por defecto
    "hide_apps": [],  # Ocultar aplicaciones específicas (vacío para mostrar todas)
    "hide_models": [],  # Ocultar modelos específicos (vacío para mostrar todos)
    "order_with_respect_to": ["auth", "web"],  # Ordenar aplicaciones
    # Íconos personalizados
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "web.TuModelo": "fas fa-database",  # Reemplaza 'TuModelo' con tus modelos
    },
    # Archivos personalizados
    "custom_css": "custom.css",  # Archivo CSS personalizado
    "custom_js": None,  # Archivo JS personalizado (si es necesario)
}